name: Simple Zero Downtime Deployment to VPS

on:
  push:
    branches:
      - main

env:
  DOCKER_COMPOSE_FILE: docker-compose.prod.yml
  HEALTH_CHECK_URL: http://localhost/health

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd ~/laraveldocker.prod/

            # Step 1: Pull the latest code
            git pull origin main

            # Step 2: Build new Docker images
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker-compose -f $DOCKER_COMPOSE_FILE build

            # Step 3: Start new app instance (blue-green approach)
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker-compose -f $DOCKER_COMPOSE_FILE up -d --scale app=2

            # Step 4: Health check for the new instance
            for i in {1..10}; do
              if curl -sSf $HEALTH_CHECK_URL >/dev/null 2>&1; then
                echo "Health check passed"
                break
              fi
              if [ $i -eq 10 ]; then
                echo "Health check failed after 10 attempts. Exiting."
                exit 1
              fi
              sleep 5
            done

            # Step 5: Scale down the old instance, keep one running app
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker-compose -f $DOCKER_COMPOSE_FILE up -d --scale app=1

            # Step 6: Clean up unused resources (optional)
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker system prune -f
